// ------------------------------------------------------------
// _utils.scss
//
// variables, functions, mixins, placeholders go here.
//
// ------------------------------------------------------------

@import "../fonts/icons/entypo";

// ------------------------------------------------------------
// FUNCTIONS
// ------------------------------------------------------------

// A function to quickly adjust font sizes to scale
@mixin adjust-to-scale($factor, $font-size: $base-font-size) {
	$size: modular-scale($factor, $font-size, $modular-scale);
	@include adjust-font-size-to($size);
	margin: rhythm(4, $size) 0 rhythm(2, $size) 0;	
}

// ------------------------------------------------------------
// PLACEHOLDERS
// ------------------------------------------------------------

%ir {
text-indent: 999%;
white-space: nowrap;
overflow: hidden;
}

%clearfix {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}

%fullwidth {
  margin-left: -1 * $column-gutter;
  margin-right: -1 * $column-gutter;
  padding-left: $column-gutter;
  padding-right: $column-gutter;
}

%fullwidthbg {
  position: relative;
  
  &:before,
  &:after {
    content: '';
    position: absolute;
    display: block;
    background: inherit;
    height: 100%;
    width: 200%;
    top: 0;
  }
}

// create placeholders for all icon classes
// for reference: http://gumbyframework.com/docs/ui-kit/#!/icons
// use like:
// &:before { @extend %icon-ICON_NAME; }
@each $icon in $entypo-icons {
  %#{nth($icon, 1)} {
    content: "#{nth($icon, 2)}";
    height: inherit;
    font-family: entypo;
    display: inline-block;
    min-width: 1em;
    color: inherit;
  }
}


// ------------------------------------------------------------
// MIXINS
// ------------------------------------------------------------

// Create vendor-prefixed CSS in one go, e.g.
// @include vendor(border-radius, 4px);
@mixin vendor($property, $value...){
    -webkit-#{$property}:$value;
       -moz-#{$property}:$value;
        -ms-#{$property}:$value;
         -o-#{$property}:$value;
            #{$property}:$value;
}

// SVG mixin with fallback; requires modernizr classes
@mixin svg($image_name, $w: 100%, $h: auto, $repeat: no-repeat, $extention: '.png') {
  background-size: $w $h;
  background-repeat: $repeat;

  & { background-image: url($image_name + $extention) } //fallback
  .svg & { background-image: url($image_name + '.svg') }
}

// Full width background (left, rigt or both)
@mixin fullwidthbg($dir: 'both') {
  @extend %fullwidthbg;
  
  @if ($dir == 'left') { &:before{ content: ''; right: 100% } }
  @elseif ($dir == 'right') {  &:after{ content: ''; left: 100% } }
  @else {
    &:before{ content: ''; right: 100% }
    &:after{ content: ''; left: 100% }  
  }
}

// Breakpoints, use like this:
//	.some-class { @include breakpoint(small) { width: 60%; } }
//	.some-class { @include breakpoint(small, 'ie') { width: 60%; } }
@mixin breakpoint($bpoint, $ie:false) {
  @media #{$bpoint} { @content; }
  // @media #{$small-up} { }
  @if $ie { .oldie & { @content; }  }
}
